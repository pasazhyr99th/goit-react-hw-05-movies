{"version":3,"file":"static/js/631.1f2883c1.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 20px;\n  gap: 25px;\n`;\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n`;\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n`;\n\nexport const ContainerAdditionaInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ListAdditionalInfo = styled.ul`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkAdditionalInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 18px;\n  color: #4a4a4a;\n  cursor: pointer;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 5px;\n  padding: 6px 15px;\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid #1f1f1f;\n  color: #1f1f1f;\n  font-weight: 700;\n  font-size: 18px;\n  border-radius: 4px;\n\n  &:hover {\n    color: tomato;\n    border: 1px solid tomato;\n    background-color: #ffcebd;\n  }\n`;\n","import React, { useEffect, useRef, Suspense, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\nimport Loader from 'components/Loader';\nimport {\n  Container,\n  ContainerInfo,\n  List,\n  ListAdditionalInfo,\n  LinkAdditionalInfo,\n  Button,\n  ContainerAdditionaInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetailsData = async () => {\n      setIsLoading(true);\n\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMovieData(details);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    popularity,\n    title,\n    release_date,\n    overview,\n    genres,\n    original_title,\n  } = movieData || {};\n\n  const defaultImgURL =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>\n        <Button type=\"button\">⬅️ Go back</Button>\n      </Link>\n      {isLoading && <Loader />}\n      {movieData && (\n        <Container>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : defaultImgURL\n            }\n            alt={original_title}\n            width={250}\n          />\n          <ContainerInfo>\n            <h1>\n              {title} {release_date && `(${release_date.slice(0, 4)})`}\n            </h1>\n            <p>\n              <b>User score:</b> {popularity}\n            </p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <List>\n              {genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </List>\n          </ContainerInfo>\n        </Container>\n      )}\n      <ContainerAdditionaInfo>\n        <h3>Additional information</h3>\n        <ListAdditionalInfo>\n          <li>\n            <LinkAdditionalInfo to=\"cast\">Cast</LinkAdditionalInfo>\n          </li>\n          <li>\n            <LinkAdditionalInfo to=\"reviews\">Reviews</LinkAdditionalInfo>\n          </li>\n        </ListAdditionalInfo>\n      </ContainerAdditionaInfo>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, params);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Container","styled","ContainerInfo","List","ContainerAdditionaInfo","ListAdditionalInfo","LinkAdditionalInfo","Link","Button","useState","movieData","setMovieData","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetailsData","fetchMovieDetails","details","console","error","poster_path","popularity","title","release_date","overview","genres","original_title","to","current","type","Loader","src","alt","width","slice","map","genre","name","id","Suspense","fallback","axios","params","api_key","language","fetchTrendingMovie","response","data","results","handleSearchMovie","movieName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}