{"version":3,"file":"static/js/186.65ba1ade.chunk.js","mappings":"2MAsBA,EAlBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,KAGN,C,uJCWD,EA5BmB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMH,SAPa,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,GACTC,EAAS,GACV,EAGC,WACE,kBACEG,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,MAAOP,EACPQ,SAjBW,SAAAN,GACfD,EAASC,EAAEO,cAAcF,MAAMG,cAChC,EAgBKC,YAAY,2BAEd,mBAAQP,KAAK,SAAb,SAAsB,aAG3B,ECqBD,EA5Ce,WAAO,IAAD,EACnB,GAAwCL,EAAAA,EAAAA,UAAS,IAAjD,eAAOa,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhB,EAAK,UAAGe,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVlB,EAAJ,CAEA,IAAMmB,EAAY,mCAAG,8GAEGC,EAAAA,EAAAA,IAAkBpB,GAFrB,OAEXR,EAFW,OAGjBqB,EAAgBrB,GAHC,gDAKjB6B,QAAQC,MAAR,MALiB,yDAAH,qDASlBH,GAXwB,CAYzB,GAAE,CAACnB,IAgBJ,OACE,4BACE,SAAC,EAAD,CAAYF,SAhBK,SAAAyB,GACK,KAApBA,EAASC,OAITD,IAAavB,GAKjBa,EAAgB,IAChBG,EAAgB,CAAEhB,MAAOuB,KALvBE,MAAM,4GAJNA,MAAM,kFAUT,IAK4B,IAAxBb,EAAac,QAA0B,KAAV1B,IAC5B,SAAC2B,EAAA,EAAD,CAAWvC,OAAQwB,MAI1B,C,+LC9CDgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,oGAAH,qDASlBf,EAAiB,mCAAG,WAAMgB,GAAN,gGAENR,EAAAA,EAAAA,IAAA,6BAAgCQ,GAAaP,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,sDASjBE,EAAiB,mCAAG,WAAMC,GAAN,gGAENV,EAAAA,EAAAA,IAAA,gBAAmBU,GAAWT,GAFxB,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,oGAAH,sDASjBK,EAAc,mCAAG,WAAMD,GAAN,gGAEHV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAsCT,GAFnC,cAEpBI,EAFoB,yBAGnBA,EAASC,KAAKM,MAHK,oGAAH,sDASdC,EAAiB,mCAAG,WAAMH,GAAN,gGAENV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAsCT,GAFhC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,qD","sources":["components/MovieList/MovieList.js","components/SearchForm/SearchForm.js","pages/Movies.js","service/api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={onChange}\n        placeholder=\"enter the movie title\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearchMovie } from 'service/api';\nimport MovieList from 'components/MovieList';\nimport SearchForm from 'components/SearchForm';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n\n    const handleSearch = async () => {\n      try {\n        const movie = await handleSearchMovie(query);\n        setSearchMovies(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    handleSearch();\n  }, [query]);\n\n  const handleSubmit = newQuery => {\n    if (newQuery.trim() === '') {\n      alert('Порожній запит');\n      return;\n    }\n    if (newQuery === query) {\n      alert('Введіть новий запит');\n      return;\n    }\n\n    setSearchMovies([]);\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit} />\n      {searchMovies.length !== 0 && query !== '' && (\n        <MovieList movies={searchMovies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, params);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","onSubmit","useState","query","setQuery","e","preventDefault","type","name","autoFocus","value","onChange","currentTarget","toLowerCase","placeholder","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","handleSearch","handleSearchMovie","console","error","newQuery","trim","alert","length","MovieList","axios","params","api_key","language","fetchTrendingMovie","response","data","results","movieName","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}