{"version":3,"file":"static/js/847.bcb0a879.chunk.js","mappings":"iOAmFA,UA/EqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAE3DC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAEA,IAAMS,EAAqB,mCAAG,8GAEPC,EAAAA,EAAAA,IAAkBV,GAFX,OAEpBW,EAFoB,OAG1BZ,EAAaY,GAHa,gDAK1BC,QAAQC,MAAR,MAL0B,yDAAH,qDAS3BJ,GAXoB,CAYrB,GAAE,CAACT,IAEJ,MAQIF,GAAa,CAAC,EAPhBgB,EADF,EACEA,YACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,WACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,OAGF,OACE,iCAEE,SAAC,KAAD,CAAMC,GAAIjB,EAAoBkB,QAA9B,UACE,mBAAQC,KAAK,SAAb,oCAEDzB,IACC,4BACE,gBACE0B,MAAM,QACNC,IACEX,EAAW,yCAC2BA,GAD3B,6EAIbY,IAAKX,KAEP,4BACE,0BACGC,EADH,KACYC,EAAaU,MAAM,EAAG,GADlC,QAGA,wCAAgBT,MAChB,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOQ,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,+IC/EDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAAS5B,KAAK6B,SAHS,oGAAH,qDASlBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENR,EAAAA,EAAAA,IAAA,6BAAgCQ,GAAaP,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAAS5B,KAAK6B,SAHQ,oGAAH,sDASjB9B,EAAiB,mCAAG,WAAMV,GAAN,gGAENkC,EAAAA,EAAAA,IAAA,gBAAmBlC,IAFb,cAEvBuC,EAFuB,yBAGtBA,EAAS5B,MAHa,oGAAH,qD","sources":["pages/MovieDetails.js","service/api.js"],"sourcesContent":["import { useEffect, useRef, Suspense, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'service/api';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetailsData = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovieInfo(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetailsData();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n  } = movieInfo || {};\n\n  return (\n    <>\n      {/* <h1>Movie details: {movieId}</h1> */}\n      <Link to={backLinkLocationRef.current}>\n        <button type=\"button\">⬅️ Go back</button>\n      </Link>\n      {movieInfo && (\n        <div>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetailsData","fetchMovieDetails","data","console","error","poster_path","original_title","title","release_date","popularity","overview","genres","to","current","type","width","src","alt","slice","map","genre","name","id","Suspense","fallback","axios","params","api_key","language","fetchTrendingMovie","response","results","handleSearchMovie","movieName"],"sourceRoot":""}