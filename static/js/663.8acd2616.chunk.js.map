{"version":3,"file":"static/js/663.8acd2616.chunk.js","mappings":"sRAEaA,EAAgBC,EAAAA,EAAAA,IAAH,6HAQbC,EAAWD,EAAAA,EAAAA,GAAH,8DAKRE,EAAWF,EAAAA,EAAAA,GAAH,gX,mBC4CrB,EArDa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEA,IAAMQ,EAAiB,mCAAG,2FACxBF,GAAa,GADW,mBAIAG,EAAAA,EAAAA,IAAeT,GAJf,OAIhBU,EAJgB,OAKtBN,EAAQM,GALc,gDAOtBC,QAAQC,MAAR,MAPsB,yBAStBN,GAAa,GATS,4EAAH,qDAavBE,GAfoB,CAgBrB,GAAE,CAACR,KAGF,UAACJ,EAAD,WACGS,IAAa,SAACQ,EAAA,EAAD,KAEd,wBAAI,UACJ,SAACf,EAAD,UACGK,GACCA,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACP,UAACnB,EAAD,YACE,gBACEoB,IACEH,EAAY,yCAC0BA,GAD1B,6EAIdI,IAAKH,EACLI,MAAO,OAET,wBACE,uBAAIJ,OAEN,yBAAG,cAAYC,OAbFH,EADR,QAoBlB,C,mMCvDDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,oGAAH,qDASlBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENT,EAAAA,EAAAA,IAAA,6BAAgCS,GAAaR,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,sDASjBG,EAAiB,mCAAG,WAAMhC,GAAN,gGAENsB,EAAAA,EAAAA,IAAA,gBAAmBtB,GAAWuB,GAFxB,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,oGAAH,sDASjBnB,EAAc,mCAAG,WAAMT,GAAN,gGAEHsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,YAAsCuB,GAFnC,cAEpBI,EAFoB,yBAGnBA,EAASC,KAAKzB,MAHK,oGAAH,sDASd8B,EAAiB,mCAAG,WAAMjC,GAAN,gGAENsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,YAAsCuB,GAFhC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerCast = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 30px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 40px) / 5);\n  margin-right: 10px;\n  margin-bottom: 30px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  gap: 5px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  background-color: #f9f9f9;\n  border-radius: 5px;\n\n  &:nth-of-type(5n) {\n    margin-right: 0;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'service/api';\nimport { CastList, CastItem, ContainerCast } from './Cast.styled';\nimport Loader from 'components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieCredits = async () => {\n      setIsLoading(true);\n\n      try {\n        const credits = await fetchMovieCast(movieId);\n        setCast(credits);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <ContainerCast>\n      {isLoading && <Loader />}\n\n      <h2>Cast</h2>\n      <CastList>\n        {cast &&\n          cast.map(({ id, profile_path, name, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                }\n                alt={name}\n                width={120}\n              />\n              <p>\n                <b>{name}</b>\n              </p>\n              <p>Character: {character}</p>\n            </CastItem>\n          ))}\n      </CastList>\n    </ContainerCast>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, params);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["ContainerCast","styled","CastList","CastItem","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchMovieCredits","fetchMovieCast","credits","console","error","Loader","map","id","profile_path","name","character","src","alt","width","axios","params","api_key","language","fetchTrendingMovie","response","data","results","handleSearchMovie","movieName","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}