{"version":3,"file":"static/js/764.17d94440.chunk.js","mappings":"6LAqDA,UAlDe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,CACnC,UACA,UACA,UACA,UACA,YALF,eAAOC,EAAP,KAAeC,EAAf,KAOMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GAC/CP,IACAQ,QAAQC,IAAIL,GAQZ,IAQMM,EAAgBX,EAAOY,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAASP,EAAnB,IAEzC,OAEE,4BACE,kBAAOQ,KAAK,OAAOC,MAAOT,EAASU,SAbhB,SAAAC,GACrB,IAAMC,EAAeD,EAAEE,OAAOJ,MAC9B,GAAqB,KAAjBG,EACF,OAAOb,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,QAASY,GAC5B,KASG,wBACGR,EAAcU,KAAI,SAAAR,GACjB,OACE,yBACE,SAAC,KAAD,CAAMS,GAAE,UAAKT,GAASU,MAAO,CAAEC,KAAMtB,GAArC,SACGW,KAFIA,EAMZ,QAIR,C","sources":["pages/Movies.js"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([\n    'movie-1',\n    'movie-2',\n    'movie-3',\n    'movie-4',\n    'movie-5',\n  ]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? '';\n  setMovies();\n  console.log(searchParams);\n\n  //   useEffect(() => {\n  // HTTP\n  //   }, []);\n\n  // state, isLoading, errors\n\n  const updQueryString = e => {\n    const movieIdValue = e.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n  const visibleMovies = movies.filter(movie => movie.includes(movieId));\n\n  return (\n    // <div>Movies ðŸŽ¥</div>\n    <div>\n      <input type=\"text\" value={movieId} onChange={updQueryString} />\n      {/* <button onClick={() => setSearchParams()}>Search</button> */}\n      <ul>\n        {visibleMovies.map(movie => {\n          return (\n            <li key={movie}>\n              <Link to={`${movie}`} state={{ from: location }}>\n                {movie}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieId","get","console","log","visibleMovies","filter","movie","includes","type","value","onChange","e","movieIdValue","target","map","to","state","from"],"sourceRoot":""}