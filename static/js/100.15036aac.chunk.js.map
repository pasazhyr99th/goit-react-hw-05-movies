{"version":3,"file":"static/js/100.15036aac.chunk.js","mappings":"+PAgDA,EA5Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAEA,IAAMM,EAAiB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAeP,GAFf,OAEhBQ,EAFgB,OAGtBJ,EAAQI,GAHc,gDAKtBC,QAAQC,MAAR,MALsB,yDAAH,qDASvBJ,GAXoB,CAYrB,GAAE,CAACN,KAGF,4BACE,kCACA,wBACGG,GACCA,EAAKQ,KAAI,SAAAC,GAAK,OACZ,2BACE,gBACEC,IACED,EAAME,aAAN,yCACsCF,EAAME,cAD5C,6EAIFC,IAAKH,EAAMI,KACXC,MAAO,OAET,uBAAIL,EAAMI,QACV,uCAAeJ,EAAMM,eAXdN,EAAMO,GADH,QAkBvB,C,+LC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,oGAAH,qDASlBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENT,EAAAA,EAAAA,IAAA,6BAAgCS,GAAaR,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,sDASjBG,EAAiB,mCAAG,WAAM9B,GAAN,gGAENoB,EAAAA,EAAAA,IAAA,gBAAmBpB,GAAWqB,GAFxB,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,oGAAH,sDASjBnB,EAAc,mCAAG,WAAMP,GAAN,gGAEHoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,YAAsCqB,GAFnC,cAEpBI,EAFoB,yBAGnBA,EAASC,KAAKvB,MAHK,oGAAH,sDASd4B,EAAiB,mCAAG,WAAM/B,GAAN,gGAENoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,YAAsCqB,GAFhC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,qD","sources":["components/Cast/Cast.js","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'service/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieCredits = async () => {\n      try {\n        const credits = await fetchMovieCast(movieId);\n        setCast(credits);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast &&\n          cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                    : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                }\n                alt={actor.name}\n                width={120}\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, params);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCredits","fetchMovieCast","credits","console","error","map","actor","src","profile_path","alt","name","width","character","id","axios","params","api_key","language","fetchTrendingMovie","response","data","results","handleSearchMovie","movieName","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}