{"version":3,"file":"static/js/919.4bfe8c86.chunk.js","mappings":"+PA0CA,EAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAEA,IAAMM,EAAqB,mCAAG,8GAEJC,EAAAA,EAAAA,IAAkBP,GAFd,OAEpBG,EAFoB,OAG1BC,EAAWD,GAHe,gDAK1BK,QAAQC,MAAR,MAL0B,yDAAH,qDAS3BH,GAXoB,CAYrB,GAAE,CAACN,KAGF,4BACE,qCACA,wBACGG,EAAQO,OAAS,EAChBP,EAAQQ,KAAI,SAAAC,GAAM,OAChB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADA,KAOlB,0EAKT,C,+LCtCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,oGAAH,qDASlBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENT,EAAAA,EAAAA,IAAA,6BAAgCS,GAAaR,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,sDASjBG,EAAiB,mCAAG,WAAM1B,GAAN,gGAENgB,EAAAA,EAAAA,IAAA,gBAAmBhB,GAAWiB,GAFxB,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,oGAAH,sDASjBK,EAAc,mCAAG,WAAM3B,GAAN,gGAEHgB,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,YAAsCiB,GAFnC,cAEpBI,EAFoB,yBAGnBA,EAASC,KAAKM,MAHK,oGAAH,sDASdrB,EAAiB,mCAAG,WAAMP,GAAN,gGAENgB,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,YAAsCiB,GAFhC,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,oGAAH,qD","sources":["components/Reviews/Reviews.js","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'service/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieReviewsData = async () => {\n      try {\n        const reviews = await fetchMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieReviewsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <li>We don't have any reviews for this movie.</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, params);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviewsData","fetchMovieReviews","console","error","length","map","review","author","content","id","axios","params","api_key","language","fetchTrendingMovie","response","data","results","handleSearchMovie","movieName","fetchMovieDetails","fetchMovieCast","cast"],"sourceRoot":""}