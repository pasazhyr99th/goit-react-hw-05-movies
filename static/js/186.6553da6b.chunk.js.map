{"version":3,"file":"static/js/186.6553da6b.chunk.js","mappings":"oMAmBA,EAjBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GACCA,EAAOG,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAASE,MAAO,CAAEC,KAAMN,GAArC,SACGG,EAAMI,SAFFJ,EAAMK,GADD,KASvB,C,+ICYD,EA3BmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,kBAAMC,SANa,SAAAC,GACnBA,EAAEC,iBACFN,EAAME,EAAMK,cACb,EAGC,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,WAAS,EACTV,MAAOE,EACPS,SAAU,SAAAN,GAAC,OAAIF,EAASE,EAAEO,OAAOZ,MAAtB,EACXa,YAAY,2BAEd,mBAAQL,KAAK,SAAb,sBAGL,ECuBD,EA5Ce,WACb,OAAwCP,EAAAA,EAAAA,UAAS,IAAjD,eAAOa,EAAP,KAAqBC,EAArB,KAKQC,EAAe,mCAAG,WAAMC,GAAN,iGAEDC,EAAAA,EAAAA,IAAkBD,GAFjB,OAEdE,EAFc,OAGpBJ,EAAgBI,GAHI,gDAKpBC,QAAQC,MAAR,MALoB,yDAAH,sDA8BvB,OACE,4BACE,SAAC,EAAD,CAAYrB,MAAOgB,KACnB,SAACM,EAAA,EAAD,CAAWhC,OAAQwB,MAGxB,C,+IC9CDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAAST,KAAKU,SAHS,oGAAH,qDASlBX,EAAiB,mCAAG,WAAMD,GAAN,gGAENM,EAAAA,EAAAA,IAAA,6BAAgCN,GAAaO,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAAST,KAAKU,SAHQ,oGAAH,sDASjBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENR,EAAAA,EAAAA,IAAA,gBAAmBQ,IAFb,cAEvBH,EAFuB,yBAGtBA,EAAST,MAHa,oGAAH,qD","sources":["components/MovieList/MovieList.js","components/SearchForm/SearchForm.js","pages/Movies.js","service/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useState } from \"react\";\n\nconst SearchForm = ({ value }) => {\n  const [query, setQuery] = useState('');\n\n  // const handleInputChange = e => {\n  //   setQuery(e.target.value);\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    value(query.toLowerCase());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        placeholder=\"enter the movie title\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\nimport { handleSearchMovie } from 'service/api';\nimport MovieList from 'components/MovieList';\nimport SearchForm from 'components/SearchForm';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // const movieName = searchParams.get('query') ?? '';\n\n  // useEffect(() => {\n    const searchMovieData = async movieName => {\n      try {\n        const data = await handleSearchMovie(movieName);\n        setSearchMovies(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    // searchMovieData();\n  // }, []);\n\n  // state, isLoading, errors\n\n  // const updQueryString = e => {\n  //   const movieIdValue = e.target.value;\n  //   if (movieIdValue === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ movieId: movieIdValue });\n  // };\n  // const handleSubmit = value => {\n  //   setSearchParams({ query: value });\n  // };\n  \n  // const updQueryString = query => {\n  //   const nextParams = query !== '' && { query };\n  //   setSearchParams(nextParams);\n  // };\n\n  return (\n    <div>\n      <SearchForm value={searchMovieData} />\n      <MovieList movies={searchMovies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movies","location","useLocation","map","movie","to","state","from","title","id","value","useState","query","setQuery","onSubmit","e","preventDefault","toLowerCase","type","name","autoFocus","onChange","target","placeholder","searchMovies","setSearchMovies","searchMovieData","movieName","handleSearchMovie","data","console","error","MovieList","axios","params","api_key","language","fetchTrendingMovie","response","results","fetchMovieDetails","movieId"],"sourceRoot":""}