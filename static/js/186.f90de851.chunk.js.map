{"version":3,"file":"static/js/186.f90de851.chunk.js","mappings":"oMAmBA,EAjBqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GACCA,EAAOG,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAASE,MAAO,CAAEC,KAAMN,GAArC,SACGG,EAAMI,SAFFJ,EAAMK,GADD,KASvB,C,uJCCD,EAlBmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAK3B,OACE,kBAAMC,SALa,SAAAC,GACnBA,EAAEC,gBACH,EAGC,WACE,kBACEC,KAAK,OACLL,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEG,OAAON,MAAtB,EACXO,YAAY,2BAEd,mBAAQF,KAAK,SAAb,sBAGL,ECkCD,EA5Ce,WAAO,IAAD,EACnB,GAAwCG,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDC,EAAAA,EAAAA,IAAkBJ,GAFjB,OAEdK,EAFc,OAGpBT,EAAgBS,GAHI,gDAKpBC,QAAQC,MAAR,MALoB,yDAAH,qDASrBJ,GACD,GAAE,CAACH,IAoBJ,OACE,4BACE,SAAC,EAAD,CAAYd,MAAOc,EAAWb,SAPX,SAAAqB,GAErBT,EAD6B,KAAVS,GAAgB,CAAEA,MAAAA,GAEtC,KAKG,SAACC,EAAA,EAAD,CAAWjC,OAAQmB,MAGxB,C,uHC9CDe,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEMC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAkB,mCAAG,6GAEPJ,EAAAA,EAAAA,IAAA,qBAAgCC,GAFzB,cAExBI,EAFwB,yBAGvBA,EAASV,KAAKW,SAHS,oGAAH,qDASlBZ,EAAiB,mCAAG,WAAMJ,GAAN,gGAENU,EAAAA,EAAAA,IAAA,6BAAgCV,GAAaW,GAFvC,cAEvBI,EAFuB,yBAGtBA,EAASV,KAAKW,SAHQ,oGAAH,qD","sources":["components/MovieList/MovieList.js","components/SearchForm/SearchForm.js","pages/Movies.js","service/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default TrendingList;\n","const SearchForm = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"enter the movie title\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearchMovie } from 'service/api';\nimport MovieList from 'components/MovieList';\nimport SearchForm from 'components/SearchForm';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const searchMovieData = async () => {\n      try {\n        const data = await handleSearchMovie(movieName);\n        setSearchMovies(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    searchMovieData();\n  }, [movieName]);\n\n  // state, isLoading, errors\n\n  // const updQueryString = e => {\n  //   const movieIdValue = e.target.value;\n  //   if (movieIdValue === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ movieId: movieIdValue });\n  // };\n  // const handleSubmit = value => {\n  //   setSearchParams({ query: value });\n  // };\n  \n  const updQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <SearchForm value={movieName} onChange={updQueryString} />\n      <MovieList movies={searchMovies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '59d71211f829907de44c68d945469335';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const handleSearchMovie = async movieName => {\n  try {\n    const response = await axios.get(`search/movie?query=${movieName}`, params);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["movies","location","useLocation","map","movie","to","state","from","title","id","value","onChange","onSubmit","e","preventDefault","type","target","placeholder","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","searchMovieData","handleSearchMovie","data","console","error","query","MovieList","axios","params","api_key","language","fetchTrendingMovie","response","results"],"sourceRoot":""}